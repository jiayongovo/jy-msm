#pragma once
#include <array>
#include <cstdint>

namespace at {
namespace native {

template <>
struct NTTHyperParam<BLS12_377_Fr_G1> {
  constexpr static const std::array<uint32_t, 8> group_gen = {
      0xfffffed3,
      0x296c7fff,
      0x6ffffec7,
      0x92921665,
      0x92860e69,
      0x4c01534d,
      0xb9819970,
      0x0c79cfc4};
  constexpr static const std::array<uint32_t, 8> group_gen_inverse = {
      0xd1745d17,
      0xb76f9745,
      0xafffffff,
      0xfed18274,
      0x5b36a173,
      0xfce61983,
      0x78dc8d16,
      0x068b6ffd};

  constexpr static const std::size_t S = 47;

  constexpr static const std::array<uint32_t, (S + 1)* 8>
      forward_roots_of_unity = {
          0xfffffff3, 0x7d1c7fff, 0x6ffffff2, 0x7257f50f, 0x512c0fee,
          0x16d81575, 0x2bbb9a9d, 0x0d4bda32, 0x0000000e, 0x8cf50000,
          0x6000000e, 0xe75281ef, 0x0b0ba012, 0x49dc37a9, 0x6e710ab9,
          0x055f8b2c, 0xd2103b0e, 0x4bcacfd5, 0xb0ddeb5c, 0x4597a1b1,
          0xdd764c92, 0x713273b2, 0x585ae1ea, 0x1208f485, 0xd0b10cfb,
          0x43c377a2, 0xe1ab2ffe, 0x6fdcdd33, 0x5c736721, 0x41a16029,
          0xfbb492e4, 0x0fed8f09, 0xffae379a, 0x172fa063, 0xd26cc040,
          0x6d2c389c, 0x8c01617e, 0x8b26d607, 0x1199ccbf, 0x0ad7a02c,
          0xfefe873d, 0xff7759cc, 0x2e15a1d7, 0xc9e469cc, 0xcd5ccadd,
          0x53eb598b, 0xb45ed5aa, 0x0a119f08, 0xd6873602, 0x7fcc4602,
          0x0d84664c, 0x9b015cba, 0x4e2e0179, 0x736cd530, 0xeed774bf,
          0x0f21c7bd, 0x8bf61422, 0x1dc55c8a, 0x6ec7175a, 0x8dfaaca4,
          0x6a8ba80f, 0x640623d4, 0x5e6447d2, 0x02e960ed, 0xaec0317b,
          0xe2c1d978, 0x355a9b4e, 0x433f4156, 0xebb7842b, 0x5ff43674,
          0x3c6b13af, 0x0714a788, 0x675f3dba, 0xb89ab895, 0x96ac3995,
          0x32200ccb, 0x63b9ba0f, 0x3029e5dc, 0x17b5de92, 0x0d2fb38c,
          0x5dca3d19, 0x512dd09e, 0x1dc70202, 0x5c4913b2, 0x50c5548a,
          0xdf2a5b81, 0x7b1b24b6, 0x0c907913, 0x5ae23c46, 0xcdf2ec3a,
          0x7ae7991b, 0x6a306750, 0xc4d698aa, 0x9eca9511, 0x20eeeb4c,
          0x05adb6ca, 0x63c9ff05, 0xbdbbe39e, 0x155388cf, 0xbc0d9400,
          0x01214e28, 0xcf9daa6d, 0x2ad494c3, 0x02bcbc36, 0xc812dec9,
          0xf39b3dde, 0xa9e798f6, 0xac4acef2, 0xef6fbfd6, 0xb156be66,
          0xd8f648fe, 0x044d02c2, 0x9ad1d94a, 0xcb4b02e8, 0x8aa9f768,
          0x09286f22, 0xe43d7830, 0xbe4b4d11, 0xe6b7e267, 0x098e8002,
          0x06508dfb, 0xd68025fb, 0xdb0b556f, 0x590c1be9, 0x67a5f2f6,
          0x3d313c6d, 0xc18105b2, 0x0bdea4d8, 0x872ad28b, 0xeefb02d3,
          0x4e058bc1, 0x6aec9527, 0x435ad922, 0xcc0b97a6, 0xb06162c4,
          0x0194c4d9, 0x2a4e6774, 0xbabf311d, 0x4df5f875, 0x7d76e06a,
          0xf44a84a0, 0x3cb67900, 0xa1a2eb41, 0x05de3c1f, 0xe7d7cbac,
          0x30f67ce7, 0x87c53f40, 0x9a57d996, 0x88d63896, 0x9e476624,
          0x5cf5d2e6, 0x094d7b96, 0xa97bcae9, 0x363a8c55, 0x541d6703,
          0x994a338b, 0xd82123eb, 0x0142b614, 0x73265ce5, 0x0c16027c,
          0xbb375929, 0xfd92ff20, 0xe3b9fea2, 0x9a19190b, 0xc8a4cade,
          0xe5cc2e60, 0x762eef58, 0x0cd7703c, 0x63d4e247, 0xd98f1354,
          0x6ae5ab2a, 0xaa2bebd2, 0x51e7fca9, 0x687b3c9d, 0xe20035ff,
          0x0904f8ea, 0x618ada97, 0x705ff163, 0xc756b3fd, 0x92e8577f,
          0xeabda19b, 0x518f5a48, 0xaaf3e6f5, 0x069ff405, 0x5a70a78e,
          0x95159cf8, 0x08bea666, 0x61ed4344, 0xcb93c8e5, 0xaf13234c,
          0xb5f61a08, 0x079ca85a, 0x762b62a6, 0xdf95a592, 0x06cd7776,
          0x4b330792, 0x892b3401, 0x9cdeeba3, 0x1bb7b875, 0x0406b7da,
          0xbb5d59f0, 0x72306a59, 0x0470200b, 0x2d113f94, 0xa7038bb9,
          0x651a62d4, 0x3544a763, 0x024c8b17, 0x9d734f5b, 0x5280a880,
          0xe21ea4d6, 0x0521871c, 0x43728a35, 0x00516822, 0x29db897c,
          0x0f968a5c, 0x48bd341f, 0x7ace1704, 0xce59c019, 0x99cbcaff,
          0x2e332bf8, 0x50740d59, 0x7b4d6259, 0x065b7a94, 0x06a79893,
          0x18edfc4b, 0xd9942118, 0xffe5168f, 0xb4ab2c5c, 0x76b85d81,
          0x47c2ecc0, 0x0a439040, 0x7897160b, 0xc15ce336, 0xa5553888,
          0x60ccb65e, 0x28ca87c3, 0x03f8025a, 0xe6c09c6c, 0x0ca0ef4a,
          0x2d132c04, 0xd737d2e5, 0x7b01556c, 0x7bbc8b75, 0x3524a269,
          0x43a01585, 0x3db20e87, 0x070a19c5, 0x6027c013, 0xec40797c,
          0x8998af87, 0xf0771a3e, 0x4ddb40f0, 0xd3535446, 0xa8c24178,
          0x0746e328, 0xa7d6e38d, 0xdac72d53, 0x8b12743d, 0xebf0c43a,
          0x0fdc055f, 0x9c1d0a5e, 0xd0de1e1d, 0x12199274, 0xd36de428,
          0x32943098, 0x47aba111, 0xf3597b48, 0xad0d776e, 0x206340ab,
          0x7a8fbb83, 0x10cfdd35, 0x916a2f3d, 0xb6f93b88, 0x42427291,
          0x45e2313d, 0xda27d3d5, 0x968ece12, 0xaf060240, 0x0f2c27f1,
          0xbf615993, 0xf32eef07, 0x75600c8b, 0x71f0bc05, 0x576e29ae,
          0xa7f5e0fa, 0xd6b9ceec, 0x00f64695, 0x59cd8662, 0xabd1ea6e,
          0x5f588557, 0xcf14da15, 0x66ebbac1, 0x6e5f9080, 0x6176056e,
          0x0a470581, 0x7137cc6b, 0x39890dfe, 0x1642dbf1, 0x06a976c3,
          0x3bb1ea2c, 0xd2be6827, 0xa1964ec8, 0x0dd79056, 0xd02a7b32,
          0xfc6c79e8, 0x180b0110, 0x8ba9f919, 0xfbeca933, 0xfb8c7378,
          0x47cba996, 0x0183cbb1, 0xdd77a5a8, 0x1b81a6d7, 0x3e6bc378,
          0xa8bb487c, 0x155369a9, 0xbde95c77, 0xd398faab, 0x0bab1284,
          0xa5bdde95, 0xf77e90ef, 0x87faf539, 0x54870dbf, 0xf33dc989,
          0xaddc8af0, 0xf6dd376a, 0x0be74b87, 0x60e38028, 0x58d78952,
          0xf04dd21b, 0x10014dfa, 0x34d4e72f, 0xcdb8265f, 0xedc8a15b,
          0x06edad9a, 0xa1eb2706, 0x77773544, 0x6ff28770, 0x57082447,
          0xfd33602d, 0x0eda9ad4, 0x62faa37a, 0x077ab5c7, 0x756b148f,
          0xd7262345, 0x296bffd7, 0x2009de2d, 0xab567e28, 0xe20029ff,
          0xd279aeed, 0x0170a9c5, 0x04fc7429, 0x68bc6cac, 0x1d4ac39f,
          0xa2d76e48, 0xb2e506eb, 0x73c90fa2, 0x721b25b7, 0x0801e08d,
          0x7326cc26, 0x3f6f3ff1, 0xeb5da228, 0xc6d71ac6, 0xf89ba32c,
          0x717d2664, 0xb39afdce, 0x0a29fd79, 0x1f7d7347, 0x89832c30,
          0xdd07018b, 0x0dbd1eaa, 0x06370de0, 0xb76f3b32, 0xe631e66b,
          0x0458c8bc, 0xda3ad648, 0xaf80da4d, 0xfc381dac, 0x5e223adb,
          0xb2f92525, 0x03ba0666, 0x3befb0ce, 0x0f906c5b};

  constexpr static const std::array<uint32_t, (S + 1)* 8>
      inverse_roots_of_unity = {
          0xfffffff3, 0x7d1c7fff, 0x6ffffff2, 0x7257f50f, 0x512c0fee,
          0x16d81575, 0x2bbb9a9d, 0x0d4bda32, 0x0000000e, 0x8cf50000,
          0x6000000e, 0xe75281ef, 0x0b0ba012, 0x49dc37a9, 0x6e710ab9,
          0x055f8b2c, 0x2defc4f3, 0xbe46b02a, 0x1f2214a4, 0x1412d54d,
          0x7ec1636f, 0xef81d96b, 0x41d1c36b, 0x00a270d9, 0xe53d52c6,
          0xf64cdca2, 0x120ff18f, 0x93e63e83, 0xe7c53cc6, 0x5fe53168,
          0x0287d532, 0x09234d5c, 0xe8a8784b, 0x0ee27570, 0x8682d7ad,
          0xda62faba, 0x00eeefbc, 0x87b49b40, 0xe44daaf4, 0x128b552d,
          0x3bc9136a, 0x407c45fd, 0x1ba1094b, 0x02c846fc, 0xf3620fb1,
          0x8bc65351, 0xcaca2ccd, 0x09aecbe2, 0xf148cf5b, 0xfd52be9f,
          0xaf510870, 0x6b5c1892, 0xcb36fac9, 0x58c3fc00, 0x8d8799f2,
          0x09ea0e3d, 0x2a77cf6a, 0x3e10896e, 0x713e523d, 0x5172cd0d,
          0xa0bbbbb1, 0x69196e5e, 0x454dd831, 0x082774e3, 0xf0c730a2,
          0x4783109a, 0x76c30281, 0xdc09f161, 0x73c11417, 0x8b7ce0ba,
          0x5d56e620, 0x0b243b3f, 0x112b3f9f, 0xf1bb77ea, 0xc9e8fc24,
          0x1d4447d0, 0x68fdf445, 0x3d8d28ab, 0x3767a775, 0x0a9bafe5,
          0xb9db9bf3, 0x4d11c481, 0x0fd281dc, 0xaebaa014, 0x2f3a2f6a,
          0xec5bee04, 0xd9312b14, 0x0d61799f, 0x88a6a15f, 0x2ccbc0f3,
          0xed1d4632, 0x56b825c4, 0x4298acd3, 0x41bf5f91, 0x035fc8c5,
          0x12aa0619, 0x1a1f9b43, 0x1e2e7cfb, 0x6be50bee, 0x263c888b,
          0x84ebbfa6, 0x99475a2f, 0x02a86bce, 0x0bdcbe0b, 0xa98b353a,
          0x82d0fed0, 0xc470aa7e, 0xe2f86799, 0xd6dd8326, 0x2b390d06,
          0x016bd50d, 0x0bcc4abe, 0x25738776, 0x2c7ca60b, 0xac87dc79,
          0x8313a374, 0x072c5c39, 0x435dc9a1, 0x1ff7effb, 0x1295c2ba,
          0xbbcea182, 0x79ded283, 0x53654d8e, 0x93bfd7a1, 0x9b42a0c9,
          0xb46cca14, 0x3432f219, 0x0a7b4d29, 0x78d696f6, 0xb89fd300,
          0x1bf4d038, 0x30a0bb5d, 0xe3a07eff, 0x41ab9198, 0x31d60cde,
          0x0a4aee0e, 0xc1cda761, 0x51aec100, 0xdcae69e9, 0x3ad7cf83,
          0xd5344407, 0x92cb95da, 0x15eb17d2, 0x020dddfe, 0x2a1551df,
          0x211b59aa, 0x8816042d, 0x96fae0a2, 0x6b8785e7, 0x2258ceea,
          0x33e8481d, 0x0ff9de84, 0xe7b52ae4, 0x672e5a03, 0x74377a4f,
          0xd163678b, 0x57583c53, 0x30fc7360, 0xc9ec71e0, 0x036019d5,
          0xbed20f9a, 0x708dbcec, 0xdbe6c7f4, 0x1e937fbb, 0xd7af09ce,
          0xc4a62bc6, 0x6cf2be16, 0x037e62b2, 0x0c97cdfd, 0xb06ba5f6,
          0x29cf0be6, 0x47f6a953, 0x29fc4fb8, 0x7485843f, 0xef0a9221,
          0x05145b97, 0xe3825884, 0xa8cddb14, 0x58828fe5, 0x9310fb31,
          0x86af70f6, 0x2f03e619, 0xd15fc81b, 0x09bacc7e, 0x73cc6379,
          0x1434222d, 0x3a5e1019, 0x48c8afe7, 0x87182cc4, 0x936e25ef,
          0x71d7377e, 0x04110dca, 0x04a581a6, 0xd3e14c7f, 0x6532d258,
          0xef3fca92, 0x924beca2, 0xdf5da385, 0xe69c145a, 0x0eb2be53,
          0x8906f8b7, 0x0155ff76, 0x740c7d5a, 0x0d801e6f, 0xf2e90247,
          0x7574e8a9, 0xe240311a, 0x0cb68ac8, 0x9bf1c91c, 0x53027102,
          0xe0828e4a, 0xc3e2dadc, 0xc9d6de73, 0x21830c17, 0x95f783d8,
          0x0689a219, 0x72808cbe, 0x1535e766, 0xbba1b3b0, 0x28c9c0a2,
          0x7df68ddb, 0xd4fbc404, 0x98be9bdb, 0x03b601cc, 0xe00b3a4e,
          0x05619548, 0x1bff8695, 0xe0169b11, 0x375fcb29, 0xb9cfb28f,
          0xf3098b00, 0x07ff417a, 0xd49fea6d, 0xb6452d76, 0xf27f7e73,
          0x49803711, 0x9c2da0f9, 0xa7129104, 0x6f8fbcd5, 0x0abd0a96,
          0xfff86801, 0xd98843ba, 0xd392fc8e, 0x17b37a06, 0x6fe248a3,
          0x68e324b8, 0x4675d1df, 0x125a00a0, 0x6c070e31, 0xe7f74c07,
          0xa09270d9, 0xe2e4b45b, 0x6e70a842, 0x1ee21108, 0x2c76e4b8,
          0x11c3d0d9, 0x09866015, 0xf38a1c28, 0x3a741c5b, 0xd31f1900,
          0x50ba7f32, 0x80ceaf97, 0x18f79e1b, 0x039a6a00, 0x7e48ad07,
          0x3ab97f11, 0x41e2d9b1, 0x3443a82c, 0x2dfa4c8e, 0xb6b89971,
          0x4228411a, 0x06c8b11d, 0x096b2b63, 0x1c5549b5, 0x4adae626,
          0x0753910b, 0x2682cf5a, 0x177ca49c, 0x64b39f0a, 0x0b81de1e,
          0x14bb84c0, 0x677e5f11, 0x820f34eb, 0x6faac2de, 0x8cc5898c,
          0x71282b6b, 0xa2b70e95, 0x05a37bec, 0x48001a9e, 0xd6e2b40b,
          0x260fd00b, 0x1b37e22e, 0x1c29518c, 0x9e56868f, 0xee677406,
          0x1016c201, 0xd96a543b, 0x5602da29, 0xff81e9d1, 0x9bf5b22e,
          0x1fcc9034, 0x788060e9, 0x82e085b2, 0x01245430, 0x11e46e13,
          0xf4b22602, 0xa5705f5d, 0x330cabfb, 0xe95c7501, 0x6261a38d,
          0x439e480f, 0x0b866b7a, 0xf3c6dad7, 0xd9636c94, 0x5d58381f,
          0xa005fc6e, 0x1a8e9335, 0x4a28db0e, 0x0c1f9844, 0x0e889eb9,
          0x3718477b, 0x9c69f569, 0x342f03e8, 0x5b7f1542, 0x7c16e7ac,
          0x451ef0bd, 0xe84d79c8, 0x07fcf38f, 0x48168d6d, 0x065e6c57,
          0x0fc4ae3f, 0x54d5a6ea, 0x9f55ed7e, 0xe5815f82, 0xafd69e19,
          0x081396cc, 0xaf26ed0b, 0x5b6986a3, 0x0954b60a, 0x0e9dd43f,
          0x3235a80a, 0x4d8c438b, 0x6af22c03, 0x0c61d622, 0x2d71f2a0,
          0xe1a953a6, 0xaf0426ef, 0xce378b1f, 0xf9857747, 0x8e1a460e,
          0x1826fcd7, 0x0c296ae3, 0x3c377785, 0xb311ae55, 0xe7224c4e,
          0xc2dd1d5d, 0x71750d8e, 0x8ebc4d0e, 0xa9e01de1, 0x0774860d,
          0x0d363679, 0x605d45c0, 0x909c1fe5, 0xf6c4cc58, 0xf0f63f2f,
          0x0bfb8dec, 0xa00f620d, 0x0b920a01, 0xedce32dd, 0x51407fd0,
          0x72314643, 0xd56d5ff9, 0x70d5ab31, 0x8ca8ec97, 0x319ca504,
          0x01a4b2d1, 0x4767f5bd, 0x0d248e97, 0x32f67f4c, 0xfa72032b,
          0xee4ee58f, 0x7ec7e591, 0x8e126f27, 0x1227d66f};

  constexpr static const std::array<uint32_t, (S + 1)* 8> domain_size_inverse =
      {
          0xfffffff3, 0x7d1c7fff, 0x6ffffff2, 0x7257f50f, 0x512c0fee,
          0x16d81575, 0x2bbb9a9d, 0x0d4bda32, 0xfffffffa, 0xc396ffff,
          0x1ffffff9, 0xe6013607, 0xd6b1dff7, 0xbbc63149, 0x62f41ff9,
          0x0ffb9fc8, 0xfffffffd, 0xe1cb7fff, 0x8ffffffc, 0xf3009b03,
          0xeb58effb, 0xdde318a4, 0x317a0ffc, 0x07fdcfe4, 0xffffffff,
          0xf5ee7fff, 0x2ffffffe, 0xa6558901, 0xa3c84ffe, 0x9f4bb2e1,
          0x65d35aa9, 0x0d549aa1, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x08000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x04000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x01000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00800000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00400000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00200000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00100000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00080000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00040000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00020000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00010000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00008000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00002000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00001000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000400, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000200, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000100,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000080, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000040, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000020, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000010, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000008,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000004, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000002, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x80000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x20000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x08000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x04000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x01000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00800000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00400000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00200000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00100000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00080000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00040000,
          0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
          0x00000000, 0x00000000, 0x00020000, 0x00000000,
      };
};

} // namespace native
} // namespace at
